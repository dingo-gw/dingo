################################################################################
## Calibration arguments
################################################################################

calibration-model=None
spline-calibration-nodes=10
spline-calibration-curves=1000
spline-calibration-envelope-dict = { {% if 'calibration envelopes' in production.meta['data'] %} {% for key, value in production.meta['data']['calibration envelopes'].items() %} {{ key }}:{{ value }}, {% endfor %} {% endif %} }


################################################################################
## Data generation arguments
################################################################################

trigger-time= {{ production.meta['data']['event time'] }} 
data-dict = { {% if production.meta['data'] contains "files" %} {% for key, value in production.meta['data']["files"].items() %} {{ key }}:{{ value }}, {% endfor %} {% endif %} }
channel-dict = { {% if 'channels' in production.meta['data'] %} {% for key, value in production.meta['data']['channels'].items() %} {{ value }}, {% endfor %} {% endif %} }
injection-dict = { {% if production.meta["data"] contains "injection params" %} {% for key, value in production.meta['data']["injection params"].items() %} {{ key }}:{{ value }}, {% endfor %} {% endif %} }


################################################################################
## Detector arguments
################################################################################

detectors = [ {% if 'interferometers' in production.meta['data'] %} {% for key in production.meta['data']['interferometers'] %} {{ key }}{% if not loop.last %}, {% endif %} {% endfor %} {% endif %} ]
psd-length = {{production.meta['data']["psd length"]}}

################################################################################
##  Job submission arguments
################################################################################

accounting = {{ production.meta["scheduler"]["accounting group"] }} # ligo.dev.o3.cbc.pe.dingo
accounting-user = {{ production.meta["scheduler"]["accounting user"] }}
label={{ production.name }} 
local = False
local-generation=True
outdir={{ production.rundir }} 
request-disk={{production.meta["scheduler"]["request disk"]}}
request-memory={{production.meta["scheduler"]["request memory"]}}
n-parallel= {{ production.meta["scheduler"]["n parallel"] }}
request-cpus-importance-sampling = {{ production.meta["scheduler"]["request cpus importance sampling"] }}
sampling-requirements = [TARGET.CUDAGlobalMemoryMb>{{ production.meta["scheduler"]["global CUDA memory"] }} ]
simple-submission = False

################################################################################
##  Sampler arguments
################################################################################

model = {{ production.meta['networks']['model']}}
model-init = {{ production.meta['networks']['model init']}}
recover-log-prob = true
device = 'cuda'
num-gnpe-iterations = {{ production.meta["sampler"]["num gnpe iterations"] }}
num-samples = {{ production.meta["sampler"]["num samples"] }}
batch-size = {{ production.meta["sampler"]["batch size"] }}

################################################################################
## Prior arguments
################################################################################

prior-dict = { {% if 'prior' in production.meta %} {% for key, value in production.meta['prior'].items() %} {{ key }}={{ value }}, {% endfor %} {% endif %} }


################################################################################
## Extra arguments
################################################################################

environment-variables= { {% if "environment variables" in production.meta["scheduler"] %} {% for key, value in production.meta["scheduler"]["environment variables"].items() %} {{ key }}:{{ value }} {% if not loop.last %}, {% endif %} {% endfor %} {% endif %} }
create-summary= {% if 'postprocessing' in production.meta %}{% if 'pesummary' in production.meta['postprocessing'] %}true{% else %}false{% endif %} {% endif %} 