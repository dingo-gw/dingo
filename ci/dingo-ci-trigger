#!/bin/bash
set -euo pipefail

# Simple repo-checker: run CI when there's a new commit, a new tag, or every Sunday night (once per week).
DINGO_REPO="https://github.com/dingo-gw/dingo.git"
BRANCH="main"
CLONE_PATH="/data/dingo/repo-checker"
JOBS_PATH="/data/dingo"
EMAIL_CONFIG="/data/dingo/mpi-email.json"
DOCKER_IMAGE="dingo:toy_npe_model"

# Sunday-night schedule: hour in 24h (23 = 23:00-23:59). Timer will invoke this script every 5 minutes.
SCHEDULE_DAY_NUM=7   # 1..7 where 7 = Sunday
SCHEDULE_HOUR=23

for cmd in git docker stat date; do
    command -v "$cmd" >/dev/null 2>&1 || { echo "Required command not found: $cmd" >&2; exit 1; }
done

# Return 0 if a job exists for ref (exact name or prefix match for short sha)
job_exists_for_ref() {
    local ref="$1"
    if [[ "$ref" =~ ^[0-9a-fA-F]{7,40}$ ]]; then
        shopt -s nullglob
        for d in "${JOBS_PATH}"/*/; do
            d="${d%/}"
            local name
            name="$(basename "$d")"
            if [[ "$name" == "${ref}"* ]]; then
                shopt -u nullglob
                return 0
            fi
        done
        shopt -u nullglob
        return 1
    else
        [ -d "${JOBS_PATH}/${ref}" ]
    fi
}

# Print newest job directory mtime (epoch seconds) for ref, prefix-match for short sha.
# Returns non-zero and prints nothing if none.
newest_job_mtime_for_ref() {
    local ref="$1"
    local newest=0 found=0
    if [[ "$ref" =~ ^[0-9a-fA-F]{7,40}$ ]]; then
        shopt -s nullglob
        for d in "${JOBS_PATH}"/*/; do
            d="${d%/}"
            local name ts
            name="$(basename "$d")"
            if [[ "$name" == "${ref}"* ]]; then
                found=1
                ts=$(stat -c %Y "$d")
                (( ts > newest )) && newest=$ts
            fi
        done
        shopt -u nullglob
    else
        local jobdir="${JOBS_PATH}/${ref}"
        if [ -d "$jobdir" ]; then
            found=1
            newest=$(stat -c %Y "$jobdir")
        fi
    fi

    if (( found )); then
        printf '%d' "$newest"
        return 0
    else
        return 1
    fi
}

# Return 0 if ref has NOT been run this ISO week.
not_ran_this_iso_week() {
    local ref="$1"
    local newest_ts current_week job_week
    if ! newest_ts=$(newest_job_mtime_for_ref "$ref" 2>/dev/null); then
        return 0  # no job => not run this week
    fi
    current_week=$(date +%V)
    job_week=$(date -d "@${newest_ts}" +%V)
    [ "$job_week" != "$current_week" ]
}

is_sunday_night() {
    local day hour
    day=$(date +%u)   # 1..7 (Mon..Sun)
    hour=$(date +%H)  # 00..23
    if (( day == SCHEDULE_DAY_NUM )) && (( 10#$hour == SCHEDULE_HOUR )); then
        return 0
    else
        return 1
    fi
}

run_ci_for() {
    local ref="$1"
    echo "Launching CI for ${ref}"
    docker run --rm --shm-size=16g --runtime=nvidia --gpus all \
        -v "/data/dingo:/data/dingo" \
        "${DOCKER_IMAGE}" --base-dir "${JOBS_PATH}" --checkout "${ref}" --email "${EMAIL_CONFIG}"
}

# prepare clone
rm -rf "${CLONE_PATH}"
mkdir -p "$(dirname "${CLONE_PATH}")"
git clone "${DINGO_REPO}" "${CLONE_PATH}"
git -C "${CLONE_PATH}" fetch --all --tags --prune
git -C "${CLONE_PATH}" checkout "${BRANCH}"

# latest commit (short)
latest_commit=$(git -C "${CLONE_PATH}" rev-parse --short=7 HEAD)
echo "Latest commit: ${latest_commit}"
if ! job_exists_for_ref "${latest_commit}"; then
    run_ci_for "${latest_commit}"
else
    if is_sunday_night && not_ran_this_iso_week "${latest_commit}"; then
        echo "Sunday-night scheduled run and commit not yet run this week -> re-running CI for ${latest_commit}"
        run_ci_for "${latest_commit}"
    else
        echo "Job already exists for commit ${latest_commit}; skipping"
    fi
fi

# latest tag (if any)
latest_tag=$(git -C "${CLONE_PATH}" describe --tags --abbrev=0 2>/dev/null || git -C "${CLONE_PATH}" tag --sort=-creatordate 2>/dev/null | head -n1 || true)
if [ -n "${latest_tag}" ]; then
    echo "Latest tag: ${latest_tag}"
    if ! job_exists_for_ref "${latest_tag}"; then
        run_ci_for "${latest_tag}"
    else
        if is_sunday_night && not_ran_this_iso_week "${latest_tag}"; then
            echo "Sunday-night scheduled run and tag not yet run this week -> re-running CI for ${latest_tag}"
            run_ci_for "${latest_tag}"
        else
            echo "Job already exists for tag ${latest_tag}; skipping"
        fi
    fi
else
    echo "No tags found"
fi

exit 0
